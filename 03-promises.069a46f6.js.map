{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,gBAAiBF,SAASC,cAAc,kBACxCE,eAAgBH,SAASC,cAAc,iBACvCG,YAAaJ,SAASC,cAAc,mBACpCI,UAAWL,SAASC,cAAc,oBAGpC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAMbV,EAAKC,KAAKiB,iBAAiB,UAAUC,IACnCA,EAAEC,iBACFC,QAAQC,IAAI,OACZ,IAAIC,EAAeC,OAAOxB,EAAKI,gBAAgBqB,OAC/C,IAAK,IAAIC,EAAI,EAAGA,EAAIF,OAAOxB,EAAKM,YAAYmB,OAAS,EAAGC,IACtDlB,EAAckB,EAAGH,GACdI,MAAKC,IACJC,EAAA/B,GAASgC,OAAOC,QACd,qBAAqBH,EAAOnB,eAAemB,EAAOlB,UACnD,IAEFsB,OAAMJ,IACLC,EAAA/B,GAASgC,OAAOG,QACd,oBAAoBL,EAAOnB,eAAemB,EAAOlB,UAClD,IAELa,GAAgBC,OAAOxB,EAAKK,eAAeoB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelayInput: document.querySelector('[name=\"delay\"]'),\n  delayStepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  console.log('GO!');\n  let currentDelay = Number(refs.firstDelayInput.value);\n  for (let i = 1; i < Number(refs.amountInput.value) + 1; i++) {\n    createPromise(i, currentDelay)\n      .then(result => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${result.position} in ${result.delay}ms`\n        );\n      })\n      .catch(result => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${result.position} in ${result.delay}ms`\n        );\n      });\n    currentDelay += Number(refs.delayStepInput.value);\n  }\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstDelayInput","delayStepInput","amountInput","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","console","log","currentDelay","Number","value","i","then","result","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.069a46f6.js.map"}